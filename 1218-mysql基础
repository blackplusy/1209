分别通过多表查询和子查询写出下面SQL
查询以C开头的国家有哪些城市?
多表
a>
select c.city from country co,city c
where co.country_id=c.country_id
and co.country like 'C%';
b>
select country_id from country where country like 'C%';
select city from city where country_id in (select country_id from country where country like 'C%');


查询客户表中名字为MARY的所在城市?
select c.city from city c,address a,customer cu
where c.city_id=a.city_id
and a.address_id=cu.address_id
and cu.first_name='MARY';

select address_id from customer where first_name='MARY';
select city_id from address where address_id in (select address_id from customer where first_name='MARY');
select city from city where city id in (select city_id from address where address_id in (select address_id from customer where first_name='MARY'));

查询客户表中名字为MARY的所在国家?
select co.country from city c,address a,customer cu,country co
where c.city_id=a.city_id
and a.address_id=cu.address_id
and c.country_id=co.country_id
and cu.first_name='MARY';

select address_id from customer where first_name='MARY';
select city_id from address where address_id in (select address_id from customer where first_name='MARY');
select country_id from city where city_id in (select city_id from address where address_id in (select address_id from customer where first_name='MARY'))
select country from country where country_id in (select country_id from city where city_id in (select city_id from address where address_id in (select address_id from customer where first_name='MARY')));


=========================================================================================================
1.分组查询
按照某种属性进行分类
a>分组函数(聚合)
分组函数通常是和分组一起使用，但是也可以单独使用
max()    最大
min()    最小
avg()    平均
sum()    求和
count()  计数
需求:查询ecs_goods表中最高本店售价的商品的名字
select goods_name from ecs_goods where shop_price=max(shop_price);
注意:where后面不能直接跟分组函数
select max(shop_price) from ecs_goods
select goods_name from ecs_goods where shop_price=(select max(shop_price) from ecs_goods);
b>分组查询
语法:select 列 from 表
		where  条件
			group by 分组条件
				having 分组后过滤条件;
select country from country group by country;---Y
select city,country_id from city group by country_id;---x
分组条件：每后面跟的都是分组条件

需求:查询ecs_goods表中每种商品分类id有多少种商品
select  cat_id,count(goods_name)  from ecs_goods group by cat_id;
需求:查询每种商品分类有多少种商品，要求显示商品分类名称，商品数量
select  c.cat_name,count(g.goods_name) from ecs_category c,ecs_goods g
where c.cat_id=g.cat_id
group by c.cat_name;
c>having
where    分组前过滤，后面不能直接跟分组函数
having   分组后过滤，后面可以直接跟分组函数
需求:查询商品数量超过3的商品分类名称
select  c.cat_name,count(g.goods_name) from ecs_category c,ecs_goods g
where c.cat_id=g.cat_id
group by c.cat_name
having count(g.goods_name)>3;

查询每个国家有多少个城市,要求显示国家名称,城市数量?
select co.country,count(c.city)  from country co,city c
where co.country_id=c.country_id
group by co.country;


查询每个城市有多少个客户,要求显示城市名称,客户数量(计算客户id)
select  c.city,count(cu.customer_id)  from city c,address a,customer cu
where c.city_id=a.city_id
and a.address_id=cu.addressid
group by c.city;


查询C开头的国家,每个国家有多少个城市
select co.country,count(c.city)  from country co,city c
where co.country_id=c.country_id
group by co.country 
having co.country like 'C%';


城市数量超过30的国家名称
select co.country,count(c.city)  from country co,city c
where co.country_id=c.country_id
group by co.country
having count(c.city)>30;

2.排序和分页
a.排序
	顺序(从小到大)
		order by 列;
		order by 列 asc;
	逆序、倒序、反序(从大到小)
		order by 列 desc;
	语法:
		select 列 from 表
			where 条件
				group by 分组条件
					having 分组后过滤条件
						order by 排序条件
	需求:查询ecs_goods中所有数据，按照本店售价从大到小进行排列
		select * from ecs_goods order by shop_price desc;
	需求:查询ecs_goods中所有数据，按照商品id从小到大进行排列
		select * from ecs_goods order by goods_id;
b.分页(limit)
	类似于邮箱，每页20条，1：1-20，2：21-40
	需求:查询ecs_goods表中前5行数据
	select * from ecs_goods limit 5;
	需求:查询ecs_goods表中前6-15行数据
	select * from ecs_goods limit 5,10;
查询语法:
		select 列 from 表
			where 条件
				group by 分组条件
					having 分组后过滤条件
						order by 排序条件
							limit 限制条件;
=========================================================
--2.png
a.select count(*) from table1;
b.select  t2.学生家庭住址 from table1 t1,table2 t2
where t1.学生id=t2.学生id
and  t1.姓名 like '张%'
and t1.性别='女'
order by t1.姓名;



--5.bmp
a.select avg(english) from mark;
b.
select  m.math,c.name,c.telno,c.address from cust c,mark m
where c.studenton=m.studentno
and c.studentno in (11,22,33,44,55);

--6.jpg
create table user(
	userid int(11),
	username varchar2(20),
	password varchar2(20),
	crtime   date
);
insert into user values(1002,'admin','admin','2015-01-01');


































